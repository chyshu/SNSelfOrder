<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:converter="clr-namespace:SNSelfOrder.Helpers">

    <converter:VisibilityConverter x:Key="VisibilityConverter" />
    <converter:NewLineConverter x:Key="NewLineConverter"/>
    <converter:StringVisibilityConverter x:Key="StringVisibilityConverter" />
    <converter:NotVisibilityConverter x:Key="NotVisibilityConverter" />
    <converter:BitmapImageConverter x:Key="BitmapImageConverter"/>
    <converter:NotBoolConverter x:Key="NotBoolConverter"/>
    <converter:MinusConverter x:Key="MinusConverter"/>
    <converter:PageVisibilityConverter x:Key="PageVisibilityConverter"/>
    <converter:SelectedColorConvert x:Key="SelectedColorConvert"/>
    <converter:StringColorConvert x:Key="StringColorConvert"/>
    <converter:FontStyleConvert x:Key="FontStyleConvert"/>
    <converter:TextOffsetConvert x:Key="TextOffsetConvert"/>
    <converter:DateConvert x:Key="DateConvert"/>
    <converter:DateTimeConverter x:Key="DateTimeConverter"/>
    

    <!--#region GENERIC FONTS -->

    <FontFamily x:Key="DefaultFontFamily">Arial</FontFamily>
    <FontFamily x:Key="DefaultLargeFontFamily">Arial</FontFamily>
    <FontFamily x:Key="DefaultSmallFontFamily">Arial</FontFamily>

    <!--#endregion-->

    <!--#region GENERIC SIZES/ NUMBERS -->
    <sys:Double x:Key="TitleFontSize">48</sys:Double>
    <sys:Double x:Key="DefaultFontSize">32</sys:Double>
    <sys:Double x:Key="ButtonFontSize">30</sys:Double>
    <sys:Double x:Key="TransFontSize">22</sys:Double>

    <CornerRadius x:Key="ButtonCornerRadius">5</CornerRadius>
    <CornerRadius x:Key="SectionBorderCornerRadius">5</CornerRadius>
    <CornerRadius x:Key="PopupBorderCornerRadius">5</CornerRadius>
    <sys:Double x:Key="RoundButtonHeight">60</sys:Double>
    <CornerRadius x:Key="RoundButtonCornerRadius">30</CornerRadius>
    <CornerRadius x:Key="GirdItemDescBorderCornerRadius">0</CornerRadius>

    <CornerRadius x:Key="ModifierBorderCornerRadius">0</CornerRadius>

    <!-- THICKNESSES 
         These are used for margins, paddings, border sizes, button border sizes.    
         The values go in sequence Left, Top, Right, Bottom.
    -->
    <Thickness x:Key="ButtonBorderThickness">3,3,3,3</Thickness>
    <Thickness x:Key="SectionBorderThickness">0</Thickness>
    <Thickness x:Key="PopupBorderThickness">1,1,1,1</Thickness>
    <Thickness x:Key="ButtonPadding">5,5,5,5</Thickness>
    <Thickness x:Key="GirdItemDescBorderThickness">1,1,1,1</Thickness>

    <Thickness x:Key="ModifierBorderThickness">1</Thickness>
    <!--#endregion-->

    <!--#region GENERIC COLOURS/BRUSHES -->
    <!-- The examples here are for solid colors but you could use grandient brushes (or other WPF brushes) if desired. -->

    <!-- This is the Main Colour scheme of the app -->
    <SolidColorBrush x:Key="MainSchemeBrush"
                     Color="#2185d0" />

    <!-- This is the Secondary Colour theme of the app -->
    <SolidColorBrush x:Key="SubSchemeBrush"
                     Color="White" />


    <!-- this is used to provide a shadow on the background for popup controls -->
    <SolidColorBrush x:Key="ShadowBackgroundBrush"
                     Color="#06000000" />

    <!-- the main background colour -->
    <SolidColorBrush x:Key="BackgroundBrush"
                     Color="#ff000000" />

    <SolidColorBrush x:Key="BackgroundTextBrush"
                     Color="#FFDDDDDD" />

    <!-- the colour of the text to appear on the main background. want a contrasting colour!!! -->
    <SolidColorBrush x:Key="MainTextBrush"
                     Color="#FFEEEEEE" />

    <!-- the colour of the text to appear on the main background. want a contrasting colour!!! -->
    <SolidColorBrush x:Key="PopupTextBrush"
                     Color="#FF333333" />

    <!-- background colour of section. This sits on top of a background and contains other items -->
    <SolidColorBrush x:Key="SectionBackgroundBrush"
                     Color="Transparent" />

    <!-- colour of the border on a section. This sits on top of a background and contains other items  -->
    <SolidColorBrush x:Key="SectionBorderBrush"
                     Color="#FF000000" />

    <!-- background colour of popup.  -->
    <SolidColorBrush x:Key="PopupBackgroundBrush"
                     Color="#ffefefef" />

    <!-- colour of the border on a popup.   -->
    <SolidColorBrush x:Key="PopupBorderBrush"
                     Color="#FF000000" />

    <!-- background colour of GirdItemDesc.  -->
    <SolidColorBrush x:Key="GirdItemDescBackgroundBrush"
                     Color="#F0ffffff" />

    <!-- colour of the border on a GirdItemDesc.   -->
    <SolidColorBrush x:Key="GirdItemDescBorderBrush"
                     Color="#FF000000" />

    <SolidColorBrush x:Key="ModifierBorderBrush"
                     Color="#ffefefef" />

    <!--#endregion-->

    <!--#region GENERIC COLOURS/BRUSHES - STANDARD BUTTON -->

    <!-- background colour for a button -->
    <SolidColorBrush x:Key="ButtonBackgroundBrush"
                     Color="#FFC9C9C9" />

    <!-- colour of text for a button -->
    <SolidColorBrush x:Key="ButtonTextBrush"
                     Color="White" />

    <!-- colour of border for a button -->
    <SolidColorBrush x:Key="ButtonBorderBrush"
                     Color="Transparent" />

    <!-- colour of background when hovering over a button -->
    <SolidColorBrush x:Key="ButtonBackgroundHoverBrush"
                     Color="#33000000" />

    <!-- colour of text when hovering over a button. Not currently used. -->
    <SolidColorBrush x:Key="ButtonTextHoverBrush"
                     Color="#33000000" />

    <!-- colour of border when hovering over a button -->
    <SolidColorBrush x:Key="ButtonBorderHoverBrush"
                     Color="#33000000" />

    <!-- colour of background when a button is pressed -->
    <SolidColorBrush x:Key="ButtonBackgroundPressedBrush"
                     Color="#33000000" />

    <!-- colour of text when a button is pressed. Not currently used. -->
    <SolidColorBrush x:Key="ButtonTextPressedBrush"
                     Color="#33000000" />

    <!-- colour of border when a button is pressed -->
    <SolidColorBrush x:Key="ButtonBorderPressedBrush"
                     Color="#33000000" />

    <!-- disabed brush -->
    <SolidColorBrush x:Key="DisabledForegroundBrush"
                     Color="#330A0A0A" />


    <SolidColorBrush x:Key="VarietySeledtedColorBrush"
                     Color="#FF000000" />

    <!--#endregion-->



    <!-- this sets the background colour for the main layout grid on the data entry forms -->
    <Style x:Key="LayoutRootGridStyle"
           TargetType="Grid">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="Margin"
                Value="0" />
    </Style>

    <!-- sets the style for the popup controls -->
    <Style x:Key="PopupBorderStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="{DynamicResource PopupBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PopupBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{DynamicResource PopupBorderThickness}" />
        <Setter Property="CornerRadius"
                Value="{DynamicResource  PopupBorderCornerRadius}" />
    </Style>

    <Style x:Key="SectionBorderStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="{DynamicResource SectionBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource SectionBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="{DynamicResource SectionBorderThickness}" />
        <Setter Property="CornerRadius"
                Value="{DynamicResource SectionBorderCornerRadius}" />
    </Style>

    <LinearGradientBrush x:Key="GoButtonBackgroundBrush"
                         StartPoint="0.5,0"
                         EndPoint="0.5,1">
        <GradientStop Color="#FFE06216"
                      Offset="0.0" />
        <GradientStop Color="#FFffca18"
                      Offset="1.0" />
    </LinearGradientBrush>

    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="Background"
                Value="{DynamicResource GoButtonBackgroundBrush}" />
        <Setter Property="FontSize"
                Value="{DynamicResource ButtonFontSize}" />
        <Setter Property="BorderBrush"
                Value="#FFf29819" />
        <Setter Property="BorderThickness"
                Value="{DynamicResource ButtonBorderThickness}" />
        <Setter Property="Padding"
                Value="{DynamicResource ButtonPadding}" />
        <Setter Property="MinWidth"
                Value="100" />
    </Style>
    <!-- this is the style used by 'go' buttons. -->
    <Style x:Key="GoButtonStyle"
           TargetType="Button">
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="Background"
                Value="{DynamicResource GoButtonBackgroundBrush}" />
        <Setter Property="FontSize"
                Value="{DynamicResource ButtonFontSize}" />
        <Setter Property="BorderBrush"
                Value="#FFf29819" />
        <Setter Property="BorderThickness"
                Value="{DynamicResource ButtonBorderThickness}" />
        <Setter Property="Padding"
                Value="{DynamicResource ButtonPadding}" />
        <Setter Property="MinWidth"
                Value="100" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundOver"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation    Duration="00:00:00.4000000"
                                                Storyboard.TargetName="BackgroundOver"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0" />

                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="0.84" />
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="0.84" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="1" />
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="1" />
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid">
                        <Grid x:Name="ContentGrid">
                            <Grid.LayoutTransform>
                                <ScaleTransform x:Name="BackgroundScale"
                                                CenterX="0.5"
                                                CenterY="0.5"
                                                ScaleX="1"
                                                ScaleY="1" />
                            </Grid.LayoutTransform>

                            <Border x:Name="BackgroundNorm"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}">
                            </Border>
                            <Border x:Name="BackgroundOver"
                                    Background="#33000000"
                                    BorderBrush="#33000000"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    Opacity="0" />
                            <Border x:Name="BackgroundPressed"
                                    Background="#33000000"
                                    BorderBrush="#33000000"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    Opacity="0" />

                            <Border x:Name="DisabledVisualElement"
                                    Background="#FFF1F1F1"
                                    BorderBrush="#FFB2B2B2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Visibility="Collapsed" />
                            <ContentPresenter   x:Name="contentPresenter"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                Margin="{TemplateBinding Padding}" />
                            <TextBlock  Panel.ZIndex="1"
                                        x:Name="DisabledOverlay"
                                        Text="{TemplateBinding Content}"
                                        Foreground="#FF969696"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        Visibility="Collapsed" />
                            <!-- not currently used -->
                            <Border x:Name="FocusVisualElement"
                                    Margin="1"
                                    BorderBrush="DarkGreen"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Opacity="0" />
                            <!-- not currently used -->
                            <Border x:Name="DefaultBorder"
                                    Margin="1"
                                    BorderBrush="DarkRed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Opacity="0" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault"
                                 Value="True">
                            <Setter Property="Opacity"
                                    TargetName="DefaultBorder"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"
                                                 x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="true" />
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                            <Setter Property="Visibility"
                                    TargetName="DisabledVisualElement"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="DisabledOverlay"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="contentPresenter"
                                    Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- this is the style used by 'cancel' buttons. -->
    <Style x:Key="CancelButtonStyle"
           TargetType="Button">
        <Setter Property="Foreground"
                Value="Black" />
        <Setter Property="Background"
                Value="#FFdc5757" />
        <Setter Property="FontSize"
                Value="{DynamicResource ButtonFontSize}" />
        <Setter Property="BorderBrush"
                Value="#FFdc5757" />
        <Setter Property="BorderThickness"
                Value="{DynamicResource ButtonBorderThickness}" />
        <Setter Property="Padding"
                Value="{DynamicResource ButtonPadding}" />
        <Setter Property="MinWidth"
                Value="100" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundOver"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation    Duration="00:00:00.4000000"
                                                Storyboard.TargetName="BackgroundOver"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0" />

                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="0.84" />
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="0.84" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="1" />
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="1" />
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid">
                        <Grid x:Name="ContentGrid">
                            <Grid.LayoutTransform>
                                <ScaleTransform x:Name="BackgroundScale"
                                                CenterX="0.5"
                                                CenterY="0.5"
                                                ScaleX="1"
                                                ScaleY="1" />
                            </Grid.LayoutTransform>

                            <Border x:Name="BackgroundNorm"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}">
                            </Border>
                            <Border x:Name="BackgroundOver"
                                    Background="{DynamicResource CancelButtonBackgroundHoverBrush}"
                                    BorderBrush="{DynamicResource CancelButtonBorderHoverBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    Opacity="0" />
                            <Border x:Name="BackgroundPressed"
                                    Background="{DynamicResource CancelButtonBackgroundPressedBrush}"
                                    BorderBrush="{DynamicResource CancelButtonBorderPressedBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    Opacity="0" />

                            <Border x:Name="DisabledVisualElement"
                                    Background="#FFF1F1F1"
                                    BorderBrush="#FFB2B2B2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Visibility="Collapsed" />
                            <ContentPresenter   x:Name="contentPresenter"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                Margin="{TemplateBinding Padding}" />
                            <TextBlock  Panel.ZIndex="1"
                                        x:Name="DisabledOverlay"
                                        Text="{TemplateBinding Content}"
                                        Foreground="#FF969696"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        Visibility="Collapsed" />
                            <!-- not currently used -->
                            <Border x:Name="FocusVisualElement"
                                    Margin="1"
                                    BorderBrush="DarkGreen"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Opacity="0" />
                            <!-- not currently used -->
                            <Border x:Name="DefaultBorder"
                                    Margin="1"
                                    BorderBrush="DarkRed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Opacity="0" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault"
                                 Value="True">
                            <Setter Property="Opacity"
                                    TargetName="DefaultBorder"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"
                                                 x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="true" />
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Visibility"
                                    TargetName="DisabledVisualElement"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="DisabledOverlay"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="contentPresenter"
                                    Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- this is style of a transparent button -->
    <Style x:Key="TransparentButtonStyle"
           TargetType="Button">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="FontSize"
                Value="{DynamicResource ButtonFontSize}" />
        <Setter Property="Padding"
                Value="{DynamicResource ButtonPadding}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ButtonTextBrush}" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- this is the style of the cancel button on the popup -->
    <Style x:Key="NoButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource CancelButtonStyle}">
        <Setter Property="MinWidth"
                Value="160" />
        <Setter Property="MinHeight"
                Value="70" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="FontSize"
                Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="Margin"
                Value="10" />
    </Style>

    <!-- this is the style of the go button on the popup -->
    <Style x:Key="YesButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource GoButtonStyle}">
        <Setter Property="MinWidth"
                Value="160" />
        <Setter Property="MinHeight"
                Value="70" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="FontSize"
                Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="Margin"
                Value="10" />
    </Style>

    <!-- this is the style of the go button on the popup -->
    <Style x:Key="PopupGoButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource GoButtonStyle}">
        <Setter Property="MinWidth"
                Value="140" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="FontSize"
                Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="Margin"
                Value="10" />
    </Style>

    <DataTemplate x:Key="template1">
        <TextBlock Text="{Binding}"  TextWrapping="Wrap"></TextBlock>
    </DataTemplate>
    <Style x:Key="DigitalButtonStyle"
           TargetType="Button"
            >
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background"
                Value="{DynamicResource GoButtonBackgroundBrush}" />
        <Setter Property="FontSize"
                Value="42" />
        <Setter Property="BorderBrush"
                Value="#FFf29819" />
        <Setter Property="BorderThickness"
                Value="{DynamicResource ButtonBorderThickness}" />
        <Setter Property="Padding"
                Value="{DynamicResource ButtonPadding}" />
        <Setter Property="Margin" Value="1"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundOver"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation    Duration="00:00:00.4000000"
                                                Storyboard.TargetName="BackgroundOver"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0" />

                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="0.84" />
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="0.84" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="1" />
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="1" />
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid">
                        <Grid x:Name="ContentGrid">
                            <Grid.LayoutTransform>
                                <ScaleTransform x:Name="BackgroundScale"
                                                CenterX="0.5"
                                                CenterY="0.5"
                                                ScaleX="1"
                                                ScaleY="1" />
                            </Grid.LayoutTransform>

                            <Border x:Name="BackgroundNorm"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}">
                            </Border>
                            <Border x:Name="BackgroundOver"
                                    Background="#33000000"
                                    BorderBrush="#33000000"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    Opacity="0" />
                            <Border x:Name="BackgroundPressed"
                                    Background="#33000000"
                                    BorderBrush="#33000000"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    Opacity="0" />

                            <Border x:Name="DisabledVisualElement"
                                    Background="#FFF1F1F1"
                                    BorderBrush="#FFB2B2B2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Visibility="Collapsed" />
                            <ContentPresenter   x:Name="contentPresenter"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                Margin="{TemplateBinding Padding}" />
                            <TextBlock  Panel.ZIndex="1"
                                        x:Name="DisabledOverlay"
                                        Text="{TemplateBinding Content}"
                                        Foreground="#FF969696"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        Visibility="Collapsed" />
                            <!-- not currently used -->
                            <Border x:Name="FocusVisualElement"
                                    Margin="1"
                                    BorderBrush="DarkGreen"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Opacity="0" />
                            <!-- not currently used -->
                            <Border x:Name="DefaultBorder"
                                    Margin="1"
                                    BorderBrush="DarkRed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Opacity="0" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault"
                                 Value="True">
                            <Setter Property="Opacity"
                                    TargetName="DefaultBorder"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"
                                                 x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="true" />
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                            <Setter Property="Visibility"
                                    TargetName="DisabledVisualElement"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="DisabledOverlay"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="contentPresenter"
                                    Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="GrayButtonStyle"
           TargetType="Button"            >
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Background"
                Value="#FFA6ACAF" />
        <Setter Property="FontSize"
                Value="42" />
        <Setter Property="BorderBrush"
                Value="#FFA6ACAF" />
        <Setter Property="BorderThickness"
                Value="{DynamicResource ButtonBorderThickness}" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="Margin" Value="3"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundOver"
                                                Storyboard.TargetProperty="Opacity"
                                                To="1" />
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimation    Duration="00:00:00.4000000"
                                                Storyboard.TargetName="BackgroundOver"
                                                Storyboard.TargetProperty="Opacity"
                                                To="0" />

                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="0.84" />
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="0.84" />
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="1" />
                            <DoubleAnimation    Duration="00:00:00.1000000"
                                                Storyboard.TargetName="BackgroundScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="1" />
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Grid x:Name="Grid">
                        <Grid x:Name="ContentGrid">
                            <Grid.LayoutTransform>
                                <ScaleTransform x:Name="BackgroundScale"
                                                CenterX="0.5"
                                                CenterY="0.5"
                                                ScaleX="1"
                                                ScaleY="1" />
                            </Grid.LayoutTransform>

                            <Border x:Name="BackgroundNorm"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}">
                            </Border>
                            <Border x:Name="BackgroundOver"
                                    Background="#33000000"
                                    BorderBrush="#33000000"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    Opacity="0" />
                            <Border x:Name="BackgroundPressed"
                                    Background="#33000000"
                                    BorderBrush="#33000000"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    Opacity="0" />

                            <Border x:Name="DisabledVisualElement"
                                    Background="#FFF1F1F1"
                                    BorderBrush="#FFB2B2B2"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Visibility="Collapsed" />
                            <ContentPresenter   x:Name="contentPresenter"
                                                Content="{TemplateBinding Content}"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                Margin="{TemplateBinding Padding}" />
                            <TextBlock  Panel.ZIndex="1"
                                        x:Name="DisabledOverlay"
                                        Text="{TemplateBinding Content}"
                                        Foreground="#FF969696"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Margin="{TemplateBinding Padding}"
                                        Visibility="Collapsed" />
                            <!-- not currently used -->
                            <Border x:Name="FocusVisualElement"
                                    Margin="1"
                                    BorderBrush="DarkGreen"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Opacity="0" />
                            <!-- not currently used -->
                            <Border x:Name="DefaultBorder"
                                    Margin="1"
                                    BorderBrush="DarkRed"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{DynamicResource ButtonCornerRadius}"
                                    IsHitTestVisible="false"
                                    Opacity="0" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault"
                                 Value="True">
                            <Setter Property="Opacity"
                                    TargetName="DefaultBorder"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOff}"
                                                 x:Name="HoverOff_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="true" />
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                            <Setter Property="Visibility"
                                    TargetName="DisabledVisualElement"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="DisabledOverlay"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="contentPresenter"
                                    Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <!-- this is the style of the cancel button on the popup -->
    <Style x:Key="PopupCancelButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource CancelButtonStyle}">
        <Setter Property="MinWidth"
                Value="140" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="FontSize"
                Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="Margin"
                Value="10" />
    </Style>

    <!-- this is the background colour of the main menu list item when it has been selected  -->
    <SolidColorBrush x:Key="SelectedMainMenuListItemBackgroundBrush"
                     Color="#ff555555" />

    <!-- default text style. This will usually be for text that sits on a 'section' so colour appropriately -->
    <Style  x:Key="BaseTextBlockStyle"
            TargetType="TextBlock">
        <Setter Property="Foreground"
                Value="{DynamicResource MainTextBrush}" />
        <Setter Property="FontSize"
                Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
    </Style>

    <!-- this is the border colour of card that displays the item -->
    <SolidColorBrush x:Key="ItemCardBorderBrush"
                     Color="#ffffffff" />
    <!-- this is the colour of the header text on the card  that displays the item -->
    <SolidColorBrush x:Key="ItemCardHeaderTextBrush"
                     Color="#FFEEEEEE" />

    <!-- this is the header text that appears on an item card -->
    <Style  x:Key="ItemCardHeaderTextBlockStyle"
            TargetType="TextBlock"
            BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground"
                Value="{DynamicResource ItemCardHeaderTextBrush}" />
        <Setter Property="FontSize"
                Value="16" />
    </Style>

    <!-- this is the style for the horizontal main menu -->
    <Style  x:Key="MainMenuListBoxStyle"
            TargetType="ListBox">
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Margin"
                Value="5,5" />
        <Setter Property="Height"
                Value="210" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal"
                               HorizontalAlignment="Center" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- this is the style of the listbox SOLD OUT Page's VERTICAL MAIN MENU bar-->

    <Style  x:Key="VertMainMenuListBoxStyle"
            TargetType="ListBox">
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Margin"
                Value="1" />
        <Setter Property="Grid.RowSpan"
                Value="2"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Vertical"
                               HorizontalAlignment="Center" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- this is the style of the listbox SOLD OUT Page's VERTICAL MAIN MENU bar-->

    <Style x:Key="SoldOutMainMenuListBoxStyle"
            TargetType="ListBox"
            BasedOn="{StaticResource VertMainMenuListBoxStyle}">
        <Setter Property="Visibility"
                Value="{Binding IsModifierMode, Converter={StaticResource NotVisibilityConverter}}"/>
    </Style>


    <!-- this is the style of the listbox SOLD OUT Page's VERTICAL MODIFIER SET bar-->

    <Style x:Key="SoldOutModifierSetListBoxStyle"
            TargetType="ListBox"
            BasedOn="{StaticResource VertMainMenuListBoxStyle}">
        <Setter Property="Visibility"
                Value="{Binding IsModifierMode, Converter={StaticResource VisibilityConverter}}"/>
    </Style>

    <!-- this is the style for an item in the list box. It incorporates what happens what the list box is selected -->
    <Style x:Key="MainMenuListItemStyle"
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="IsHitTestVisible" 
                Value="{Binding IsVisible}"/>
        <Setter Property="Background"
                Value="Transparent" />
          
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border x:Name="Bd"
                                Background="Transparent"
                                SnapsToDevicePixels="true"
                                CornerRadius="5">
                            <Grid Margin="2">
                                <ContentPresenter   HorizontalAlignment="Stretch" 
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="Blue" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsVisible}" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        
    </Style>

    <!-- this is the header text that appears on a main item card, e.g. Drinks, Food, etc -->
    <Style  x:Key="MainItemCardHeaderTextBlockStyle"
            TargetType="TextBlock"
            BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontSize"
                Value="22" />
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="HorizontalAlignment" 
                Value="Stretch"/>
    </Style>


    <!-- this is the header text that appears on a main item card, e.g. Drinks, Food, etc -->
    <Style  x:Key="SoldOutMainItemCardHeaderTextBlockStyle"
            TargetType="TextBlock"
            BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="Margin"
                Value="5" />
        <Setter Property="HorizontalAlignment" 
                Value="Stretch"/>
    </Style>

    <!-- this is the template for how each main item is to be displayed on the listbox -->
    <DataTemplate x:Key="MainMenuItemDataTemplate">
        <Grid HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="{Binding IsVisible, Converter={StaticResource VisibilityConverter}}">
            <Border Background="{DynamicResource MainItemCardBackgroundBrush}"
                    BorderBrush="{DynamicResource MainItemCardBorderBrush}"
                    BorderThickness="{DynamicResource MainItemCardBorderThickness}"
                    CornerRadius="{DynamicResource MainItemCardCornerRadius}"/>
            <Grid Margin="0" Background="{Binding BackColor,Converter={StaticResource StringColorConvert}}">
               
                <Image  HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch"                        
                        Margin="0"
                        Height="{Binding Height}" Width="{Binding Width}" 
                        Panel.ZIndex="1"   
                        Source="{Binding Picture,Converter={StaticResource BitmapImageConverter}}">
                </Image>

                <Border>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0.5,0"
                                             EndPoint="0.5,1">
                            <GradientStop Color="Transparent"
                                          Offset="0.0" />
                            <GradientStop Color="Transparent"
                                          Offset="0.3" />
                            <GradientStop Color="#AA000000"
                                          Offset="1.0" />

                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <StackPanel   Margin="{Binding TextOffset ,Converter={ StaticResource TextOffsetConvert  }}" 
                              VerticalAlignment="Stretch" 
                               Background="{Binding TextBgColor,Converter={StaticResource StringColorConvert}}" >
                    <TextBlock  
                            Text="{Binding Caption}"                            
                            Panel.ZIndex="2"
                            Style="{DynamicResource MainItemCardHeaderTextBlockStyle}" 
                            TextAlignment="Center" 
                            VerticalAlignment="Center"             
                             Padding ="0,5,0,5" 
                            Visibility="{Binding Text_display_yn, Converter={StaticResource StringVisibilityConverter}}"                            
                            FontSize="{Binding FontSize}" 
                            FontStyle="{Binding FontStyle ,Converter={ StaticResource FontStyleConvert  }}"    
                            FontFamily="{Binding FontFamily}" 
                            Foreground="{Binding FontColor, Converter={StaticResource StringColorConvert} }"
                           />
                </StackPanel>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="MainItemDataTemplate">
        <Grid HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              Visibility="{Binding IsVisible, Converter={StaticResource VisibilityConverter}}">
            <Border Background="{DynamicResource MainItemCardBackgroundBrush}"
                    BorderBrush="{DynamicResource MainItemCardBorderBrush}"
                    BorderThickness="{DynamicResource MainItemCardBorderThickness}"
                    CornerRadius="{DynamicResource MainItemCardCornerRadius}"/>
            <Grid Margin="0">
                <Image  HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch"
                        MinWidth="170"
                        MinHeight="200"
                        Margin="0"
                        Source="{Binding Picture,Converter={StaticResource BitmapImageConverter}}">
                </Image>
                <Border>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0.5,0"
                                             EndPoint="0.5,1">
                            <GradientStop Color="Transparent"
                                          Offset="0.0" />
                            <GradientStop Color="Transparent"
                                          Offset="0.3" />
                            <GradientStop Color="#AA000000"
                                          Offset="1.0" />

                        </LinearGradientBrush>
                    </Border.Background>
                </Border>
                <TextBlock  Grid.Row="1"
                            Text="{Binding Caption}"
                            VerticalAlignment="Bottom"
                            Style="{DynamicResource MainItemCardHeaderTextBlockStyle}" />
            </Grid>
        </Grid>
    </DataTemplate>


    <!-- this is the template for how each main item is to be displayed on the listbox in the SOLD OUT Page -->
    <DataTemplate x:Key="SoldOutMainItemCardDataTemplate">
        <Grid HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch"
              MinHeight="80"
              Margin="3"
              Visibility="{Binding IsVisible, Converter={StaticResource VisibilityConverter}}">
            <Border Background="Orange"
                    BorderBrush="#ff803890"
                    BorderThickness="2"
                    CornerRadius="5" />

            <Viewbox >
                <TextBlock  Text="{Binding Caption}"
                            Style="{DynamicResource  MainItemCardHeaderTextBlockStyle}"
                            TextAlignment="Center" 
                            VerticalAlignment="Top" FontSize="{Binding FontSize}" 
                            FontStyle="{Binding FontStyle ,Converter={ StaticResource FontStyleConvert  }}"    
                            FontFamily="{Binding FontFamily}" />
            </Viewbox>
        </Grid>
    </DataTemplate>

    <!-- this is the style of the listbox for the sub-items from the selected main menu item. It is the listbox described in ItemCardDataTemplate -->
    <Style x:Key="ItemsListBoxStyle"
           TargetType="ListBox">
        <Setter Property="Background"
                Value="Transparent"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="Margin"
                Value="0,0,0,0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Hidden"/>
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="False"/>
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalOnly"/>
        <Setter Property="VerticalAlignment"
                Value="Stretch"/>
        <Setter Property="HorizontalAlignment"
                Value="Center"/>
        <Setter Property="Width"
                Value="Auto"/>
    </Style>

    <!-- this is the template for how each sub item is displayed on the listbox -->
    <DataTemplate x:Key="ItemCardDataTemplate">
        <Grid   Width="290" 
                Height="295"
                Margin="15"
                Background="{Binding BackColor,Converter={StaticResource StringColorConvert}  }"
                Visibility="{Binding IsVisible,Converter={StaticResource VisibilityConverter}}">

            <Border Grid.ColumnSpan="9"
                    Background="Transparent"
                    BorderThickness="2"
                    CornerRadius="5">
                <Image  Height="{Binding Height}"
                    HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        Source="{Binding ButtonImgURI,Converter={StaticResource BitmapImageConverter}}">
                </Image>
            </Border>
            <Grid Margin="5"
                  VerticalAlignment="Bottom">
                <StackPanel  Orientation="Vertical" Background="{Binding TextBgColor,Converter={StaticResource StringColorConvert} }">
                    <TextBlock Text="{Binding Caption}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Bottom"
                               TextWrapping="Wrap"
                               TextAlignment="Center"
                               Margin="0,0,5,0"
                               Style="{DynamicResource ItemCardHeaderTextBlockStyle}" 
                               FontSize="{Binding FontSize}" 
                               FontStyle="{Binding FontStyle ,Converter={ StaticResource FontStyleConvert  }}"    
                               FontFamily="{Binding FontFamily}" 
                               Foreground="{Binding FontColor, Converter={StaticResource StringColorConvert} }"  />

                    <TextBlock Text="{Binding Caption2}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                TextWrapping="Wrap"
                                Margin="0,0,5,0"
                                Style="{DynamicResource ItemCardHeaderTextBlockStyle}" 
                               FontSize="{Binding FontSize}"
                               FontStyle="{Binding FontStyle ,Converter={ StaticResource FontStyleConvert  }}"    
                            FontFamily="{Binding FontFamily}" Foreground="{Binding FontColor, Converter={StaticResource StringColorConvert} }"    />
                    <StackPanel HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                Margin="0,0,5,0">
                        <TextBlock Text="{Binding Sprice, StringFormat='\{0:$0.00;$0.00; }'}"
                                   FontWeight="Bold"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Top"
                                   Style="{DynamicResource ItemCardHeaderTextBlockStyle}" 
                                   FontSize="{Binding FontSize}"
                                   FontStyle="{Binding FontStyle ,Converter={ StaticResource FontStyleConvert  }}"  
                                   FontFamily="{Binding FontFamily}" 
                                   Foreground="{Binding FontColor, Converter={StaticResource StringColorConvert} }"   />

                    </StackPanel>
                </StackPanel>
            </Grid>

            <Button 
                Command="{Binding DataContext.ClickItemCmd, RelativeSource={RelativeSource AncestorType=ListBox}}"
                CommandParameter="{Binding }" >
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource TransparentButtonStyle}">
                        <Setter Property="IsHitTestVisible"
                                    Value="True" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SoldOut}" Value="Y">
                                <Setter Property="IsHitTestVisible" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <TextBlock Foreground="White"
                       Background="Red"
                       Text="SOLD OUT"
                       HorizontalAlignment="Stretch"
                       TextAlignment="Center"
                       VerticalAlignment="Center"
                       FontSize="40"
                       FontWeight="Bold"
                       Visibility="{Binding SoldOut, Converter={StaticResource StringVisibilityConverter}}"/>
        </Grid>
    </DataTemplate>

    <!--#region Items Page - Order Totals block at the bottom -->

    <!-- this is the style of the go button on the items screen -->
    <Style x:Key="ItemsGoButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource GoButtonStyle}">
        <Setter Property="Width"
                Value="200" />
        <Setter Property="Height"
                Value="60" />
        <Setter Property="VerticalAlignment"
                Value="Stretch" />
        <Setter Property="HorizontalAlignment"
                Value="Right" />
        <Setter Property="Content" 
                Value="View Order"/>
        <Setter Property="Background" 
                Value="Orange"/>
        <Setter Property="Foreground" 
                Value="Black"/>
        <Setter Property="FontFamily" 
                Value="Microsoft Sans Serif"/>
        <Setter Property="FontWeight" 
                Value="Bold"/>
        <Setter Property="FontSize" 
                Value="16pt"/>
    </Style>

    <!-- this is the style of the cancel button on the items screen -->
    <Style x:Key="ItemsCancelButtonStyle"
           TargetType="Button"
           BasedOn="{StaticResource CancelButtonStyle}">
        <Setter Property="Width"
                Value="200" />
        <Setter Property="Height"
                Value="60" />
        <Setter Property="VerticalAlignment"
                Value="Center" />


        <Setter Property="Content" 
                Value="Cancel Order"/>
        <Setter Property="Background" 
                Value="#e3e3e3"/>
        <Setter Property="Foreground" 
                Value="Black"/>
        <Setter Property="FontFamily" 
                Value="Microsoft Sans Serif"/>
        <Setter Property="FontWeight" 
                Value="Bold"/>
        <Setter Property="FontSize" 
                Value="16pt"/>
        <Setter Property="BorderBrush"
                Value="#e3e3e3"/>
    </Style>

    <Style x:Key="GoBackBorderStyle"
           TargetType="Border">
        <Setter Property="Margin" 
                Value="10"/>
    </Style>

    <Style x:Key="ItemsQtyBorderStyle"
           TargetType="Border">
        <Setter Property="Margin" 
                Value="10"/>
    </Style>

    <!-- This is the inner grid which contains the Totals section at bottom of page excluding the buttons-->
    <Style x:Key="ItemsOrderInfoGridStyle"
           TargetType="Grid">
        <Setter Property="HorizontalAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalAlignment"
                Value="Stretch"/>
        <Setter Property="Grid.Height"
                Value="60"/>
    </Style>

    <Style x:Key="LayoutItemQtyGridStyle"
           TargetType="Grid">
        <Setter Property="Background"
                Value="Gray"/>
    </Style>

    <!-- This is the border which contains the textblocks for the totals section at bottom of page-->
    <Style x:Key="ItemsOrderInfoBorderStyle"
           TargetType="Border" 
           BasedOn="{StaticResource SectionBorderStyle}">
        <Setter Property="Margin" 
                Value="0"/>
    </Style>
    <!--#endregion-->

    <!--#region Sold Out Page -->

    <!-- this is the style of the listbox for the sub-items from the selected MAIN MENU item in the SOLD OUT page. It is the listbox described in ItemCardDataTemplate -->
    <Style x:Key="SoldOutItemsListBoxStyle"
           TargetType="ListBox" 
           BasedOn="{StaticResource ItemsListBoxStyle}">
        <Setter Property="Visibility"
                Value="{Binding IsModifierMode, Converter={StaticResource NotVisibilityConverter}}"/>
    </Style>



    <!-- this is the style of the listbox for the sub-items from the selected MODIFIER SET item in the SOLD OUT page. It is the listbox described in ItemCardDataTemplate -->
    <Style x:Key="SoldOutModifiersListBoxStyle"
           TargetType="ListBox" 
           BasedOn="{StaticResource ItemsListBoxStyle}">
        <Setter Property="Visibility"
                Value="{Binding IsModifierMode, Converter={StaticResource VisibilityConverter}}"/>
    </Style>

    <DataTemplate x:Key="SoldOutItemCardDataTemplate">
        <Grid   Width="250"  Height="Auto"     Margin="15">
            <!--Visibility="{Binding IsVisible,Converter={StaticResource VisibilityConverter}}">-->

            <Border Grid.ColumnSpan="9"
                    Background="DarkGray"
                    BorderBrush="{DynamicResource ItemCardBorderBrush}"
                    BorderThickness="2"
                    CornerRadius="5"></Border>
            <Grid Margin="5"
                  VerticalAlignment="Bottom"
                  Background="Green">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border Background="Red"   Grid.ColumnSpan="3"  
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                        CornerRadius="5"
                        Visibility="{Binding StrSoldOut, Converter={StaticResource StringVisibilityConverter},Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Border VerticalAlignment="Center"
                            MinHeight="80"/>
                <TextBlock   Text="{Binding Caption}"   TextAlignment="Center" TextWrapping="Wrap"   Margin="5">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource ItemCardHeaderTextBlockStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StrSoldOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="Y">
                                    <Setter Property="TextDecorations">
                                        <Setter.Value>
                                            <TextDecorationCollection>
                                                <TextDecoration Location="Strikethrough">
                                                    <TextDecoration.Pen>
                                                        <Pen Brush="Yellow" Thickness="1.1"/>
                                                    </TextDecoration.Pen>
                                                </TextDecoration>
                                            </TextDecorationCollection>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>


                <!--<StackPanel Grid.Row="1"
                            Grid.Column="1"
                            VerticalAlignment="Bottom"
                            HorizontalAlignment="Right"
                            Margin="0,0,5,0">
                    <TextBlock Text="{Binding SellPriceText}"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Top"
                               Style="{DynamicResource ItemCardSubTextBlockStyle}"
                               Visibility="{Binding ShowSellPriceText, Converter={StaticResource VisibilityConverter}}" />
                    <TextBlock Text="{Binding SellPrice}"
                               FontWeight="Bold"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Top"
                               Style="{DynamicResource ItemCardHeaderTextBlockStyle}" />

                </StackPanel>-->

            </Grid>

            <Button Style="{DynamicResource TransparentButtonStyle}"
                CommandParameter="{Binding }" 
                    Command="{Binding DataContext.ClickItemCmd, RelativeSource={RelativeSource AncestorType=ListBox}}"/>
        </Grid>

    </DataTemplate>

    <DataTemplate x:Key="SoldOutModifierCardDataTemplate">
        <Grid   Width="250"  Height="Auto"  Margin="15">
            <Border 
                    Background="DarkGray"
                    BorderBrush="{DynamicResource ItemCardBorderBrush}"
                    BorderThickness="2"
                    CornerRadius="5"></Border>
            <Grid Margin="5"
                  VerticalAlignment="Bottom"
                  Background="Green">
                <Border Background="Red" 
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                        CornerRadius="5"
                        Visibility="{Binding StrSoldOut, Converter={StaticResource StringVisibilityConverter},Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Border VerticalAlignment="Center"
                            MinHeight="80"/>
                <TextBlock  Text="{Binding Caption}"   TextAlignment="Center"    TextWrapping="Wrap" FontSize="16" FontWeight="Bold"    Margin="5">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource ItemCardHeaderTextBlockStyle}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StrSoldOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  Value="Y">
                                    <Setter Property="TextDecorations">
                                        <Setter.Value>
                                            <TextDecorationCollection>
                                                <TextDecoration Location="Strikethrough">
                                                    <TextDecoration.Pen>
                                                        <Pen Brush="Yellow" Thickness="1.2"/>
                                                    </TextDecoration.Pen>
                                                </TextDecoration>
                                            </TextDecorationCollection>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
  
            </Grid>
            <Button Style="{DynamicResource TransparentButtonStyle}"
                CommandParameter="{Binding }"  Command="{Binding DataContext.ClickModifierCmd, RelativeSource={RelativeSource AncestorType=ListBox}}">
                
            </Button>

        </Grid>

    </DataTemplate>

    <!--#endregion-->




</ResourceDictionary>